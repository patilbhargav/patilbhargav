function varargout = NewGui(varargin)
% NEWGUI MATLAB code for NewGui.fig
% NEWGUI, by itself, creates a new NEWGUI or raises the existing
% singleton*.
%
% H = NEWGUI returns the handle to a new NEWGUI or the handle to
% the existing singleton*.
%
% NEWGUI('CALLBACK',hObject,eventData,handles,...) calls the local
% function named CALLBACK in NEWGUI.M with the given input arguments.
%
% NEWGUI('Property','Value',...) creates a new NEWGUI or raises the
% existing singleton*. Starting from the left, property value pairs are
% applied to the GUI before NewGui_OpeningFcn gets called. An
% unrecognized property name or invalid value makes property application
% stop. All inputs are passed to NewGui_OpeningFcn via varargin.
%
% *See GUI Options on GUIDE's Tools menu. Choose "GUI allows only one
% instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES
% Edit the above text to modify the response to help NewGui
% Last Modified by GUIDE v2.5 11-Apr-2018 19:28:37
% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name', mfilename, ...
'gui_Singleton', gui_Singleton, ...
'gui_OpeningFcn', @NewGui_OpeningFcn, ...
'gui_OutputFcn', @NewGui_OutputFcn, ...
'gui_LayoutFcn', [] , ...
'gui_Callback', []);
if nargin && ischar(varargin{1})
gui_State.gui_Callback = str2func(varargin{1});
end
if nargout
[varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT
% --- Executes just before NewGui is made visible.
function NewGui_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject handle to figure
% eventdata reserved - to be defined in a future version of MATLAB
% handles structure with handles and user data (see GUIDATA)
% varargin command line arguments to NewGui (see VARARGIN)
% Choose default command line output for NewGui
handles.output = hObject;
% Update handles structure
guidata(hObject, handles);
% UIWAIT makes NewGui wait for user response (see UIRESUME)
% uiwait(handles.figure1);
% --- Outputs from this function are returned to the command line.
function varargout = NewGui_OutputFcn(hObject, eventdata, handles)
% varargout cell array for returning output args (see VARARGOUT);
% hObject handle to figure
% eventdata reserved - to be defined in a future version of MATLAB
% handles structure with handles and user data (see GUIDATA)
% Get default command line output from handles structure
varargout{1} = handles.output;
im=imread('logo12.png');
axes(handles.axes1)
imshow(im);
% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject handle to pushbutton1 (see GCBO)
% eventdata reserved - to be defined in a future version of MATLAB
% handles structure with handles and user data (see GUIDATA)
set(handles.uipanel2, 'visible','on')
set(handles.uipanel3, 'visible','off' )
% --- Executes on button press in pushbutton2.
function pushbutton2_Callback(hObject, eventdata, handles)
% hObject handle to pushbutton2 (see GCBO)
% eventdata reserved - to be defined in a future version of MATLAB
% handles structure with handles and user data (see GUIDATA)
set(handles.uipanel3, 'visible','on')
set(handles.uipanel2, 'visible','on' )
% --- Executes on button press in pushbutton3.
function pushbutton3_Callback(hObject, eventdata, handles)
% hObject handle to pushbutton3 (see GCBO)
% eventdata reserved - to be defined in a future version of MATLAB
% handles structure with handles and user data (see GUIDATA)
clc;
clear all;
close all;
url = 'http://192.168.43.1:8080/shot.jpg';
ss = imread(url);
fh = image(ss);
while(1)
ss=imread(url);
set(fh,'CData',ss)
drawnow;
end
% --- Executes on button press in pushbutton4.
function pushbutton4_Callback(hObject, eventdata, handles)
% hObject handle to pushbutton4 (see GCBO)
% eventdata reserved - to be defined in a future version of MATLAB
% handles structure with handles and user data (see GUIDATA)
%% take input from user
uno=input('Enter your user number :');
[fname path]=uigetfile('*.png','Select Your Training Instance Image');
fname=strcat(path,fname);
%% Read an image
im=imread(fname);
im=imresize(im,[128 128]);
axes(handles.axes2)
imshow(im);
%% Feature Extraction
f=Features(im)
%% Save the image in Train Folder with name as uno.png
tfname=strcat('.\Train\',num2str(uno),'.png','.jpg');
imwrite(im,tfname);
msgbox('Your are registered... Dataset is Created');
%% Store the features in a database
try
load database
F=[F;f];
C=[C;uno];
save database F C
catch
F=f;
C=uno;
save database F C
end
% --- Executes on button press in pushbutton5.
function pushbutton5_Callback(hObject, eventdata, handles)
% hObject handle to pushbutton5 (see GCBO)
% eventdata reserved - to be defined in a future version of MATLAB
% handles structure with handles and user data (see GUIDATA)
[fname path]=uigetfile('*.png','Select Image to View');
fname=strcat(path,fname);
%% Read an image
im=imread(fname);
axes(handles.axes2)
imshow(im);
% --- Executes on button press in pushbutton6.
function pushbutton6_Callback(hObject, eventdata, handles)
% hObject handle to pushbutton6 (see GCBO)
% eventdata reserved - to be defined in a future version of MATLAB
% handles structure with handles and user data (see GUIDATA)
%% take input from user
[fname path]=uigetfile('*.png','Select Your Test Instance Image');
fname=strcat(path,fname);
%% Read an image
im=imread(fname);
axes(handles.axes3)
imshow(im);
set(handles.edit1,'string',fname);
%% Feature Extraction
f=Features(im)
%% f=BagOfWordsfeatures(im)
%% Find out the closest features from database
load database
D=[];
for(i=1:size(F,1))
d=sum(abs(F(i)-f));
D=[D d];
end
sm=inf;
ind=-1;
for(i=1:length(D))
if(D(i)<=sm)
sm=D(i);
ind=i;
end
end
detected_class=C(ind);
disp('The detected class is:');
detected_class
dfname=strcat('.\Train\',num2str(detected_class),'.png');
%% Plot current and detected images in same window
imshow(im);
title('Given Image');
axes(handles.axes4)
imshow(imread(dfname));
title(strcat('Plant Stage=',num2str(detected_class)));
if detected_class == 3
url = 'file:///C:/Users/BHARGAV/Desktop/Website/sample.html#stage3';
web(url)
elseif detected_class == 2
url = 'file:///C:/Users/BHARGAV/Desktop/Website/sample.html#stage2';
web(url)
else
url = 'file:///C:/Users/BHARGAV/Desktop/Website/sample.html#stage1';
web(url)
end
function edit1_Callback(hObject, eventdata, handles)
% hObject handle to edit1 (see GCBO)
% eventdata reserved - to be defined in a future version of MATLAB
% handles structure with handles and user data (see GUIDATA)
% Hints: get(hObject,'String') returns contents of edit1 as text
% str2double(get(hObject,'String')) returns contents of edit1 as a double
% --- Executes during object creation, after setting all properties.
function edit1_CreateFcn(hObject, eventdata, handles)
% hObject handle to edit1 (see GCBO)
% eventdata reserved - to be defined in a future version of MATLAB
% handles empty - handles not created until after all CreateFcns called
% Hint: edit controls usually have a white background on Windows.
% See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
set(hObject,'BackgroundColor','white');
end
% --- Executes on button press in pushbutton7.
function pushbutton7_Callback(hObject, eventdata, handles)
% hObject handle to pushbutton7 (see GCBO)
% eventdata reserved - to be defined in a future version of MATLAB
% handles structure with handles and user data (see GUIDATA)
%%
%% Read an image
url = 'file:///C:/Users/BHARGAV/Desktop/Website/sample.html#';
web(url)
%%
% Open the page in a new instance of the browser that does not include a
% toolbar.
web(url,'-new','-notoolbar')
% --- Executes on mouse press over axes background.
function axes3_ButtonDownFcn(hObject, eventdata, handles)
% hObject handle to axes3 (see GCBO)
% eventdata reserved - to be defined in a future version of MATLAB
% handles structure with handles and user data (see GUIDATA)
% --- If Enable == 'on', executes on mouse press in 5 pixel border.
% --- Otherwise, executes on mouse press in 5 pixel border or over pushbutton3.
function pushbutton3_ButtonDownFcn(hObject, eventdata, handles)
% hObject handle to pushbutton3 (see GCBO)
% eventdata reserved - to be defined in a future version of MATLAB
% handles structure with handles and user data (see GUIDATA)
% --- Executes on key press with focus on pushbutton1 and none of its controls.
function pushbutton1_KeyPressFcn(hObject, eventdata, handles)
% hObject handle to pushbutton1 (see GCBO)
% eventdata structure with the following fields (see MATLAB.UI.CONTROL.UICONTROL)
% Key: name of the key that was pressed, in lower case
% Character: character interpretation of the key(s) that was pressed
% Modifier: name(s) of the modifier key(s) (i.e., control, shift) pressed
% handles structure with handles and user data (see GUIDATA)